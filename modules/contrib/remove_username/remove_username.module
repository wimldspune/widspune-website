<?php

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * {@inheritdoc}
 */
function remove_username_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['account']['name']['#required'] = FALSE;
  $form['account']['name']['#access'] = FALSE;
  $form['account']['mail']['#required'] = TRUE;
  array_unshift($form['#validate'], 'remove_username_prepare_form_user_values');
  $form['#validate'][] = 'remove_username_form_user_post_validate';
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * {@inheritdoc}
 */
function remove_username_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['account']['name']['#required'] = FALSE;
  $form['account']['name']['#access'] = FALSE;
  $form['account']['mail']['#required'] = TRUE;
  array_unshift($form['#validate'], 'remove_username_prepare_form_user_values');
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * {@inheritdoc}
 */
function remove_username_form_user_login_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['name']['#title'] = \Drupal::translation()->translate('Email address');
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * {@inheritdoc}
 */
function remove_username_form_user_pass_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $form['name']['#title'] = \Drupal::translation()->translate('Email address');
}

/**
 * Copy the 'mail' field to the 'name' field before form validation.
 *
 * @param array $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function remove_username_prepare_form_user_values(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $email = $form_state->getValue('mail');
  $form_state->setValue('name', $email);
}

/**
 * Remove the errors related to 'name' field.
 * @param $form
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 */
function remove_username_form_user_post_validate(&$form, \Drupal\Core\Form\FormStateInterface $form_state) {
  $errors = $form_state->getErrors();
  unset($errors['name']);
  $form_state->clearErrors();
  foreach($errors as $field => $value) {
    $form_state->setErrorByName($field, $value);
  }
}
