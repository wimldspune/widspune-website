{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @ingroup templates
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
  node.bundle|clean_class,
  node.isPromoted() ? 'is-promoted',
  node.isSticky() ? 'is-sticky',
  not node.isPublished() ? 'is-unpublished',
  view_mode ? view_mode|clean_class,
  'clearfix',
  'wids-event-page',
]
%}
<article{{ attributes.addClass(classes) }}>

  <section class="page-container">
    <div class="container middle-section">
      <!-- Objective and Agenda Starts-->
      <div class="row header-content speakers">
        <!-- Objective -->
        <div class="col-md-6">
          <h2 class="heading-text">{{ label }}</h2>
          <p>
            <strong> Objective </strong>:
            {{ content.body }}
          </p>
        </div>
        <!-- Objective Ends -->

        <!-- Agenda starts -->
        <div class="col-md-6 agenda-section">
          <h4 class="heading-text ">Agenda</h4>
          {{ content.field_event_agenda }}
        </div>
        <!-- Agenda Ends -->
      </div>
      <!-- Objective and Agenda Starts-->

      <!-- Speakers, venue and event sponsors Starts -->
      <div class="col-md-12 event-info">
        <!-- Speakers Starts -->
        {# Set the variable #}
        {% set class = 'col-sm-6' %}
        {% if node.field_event_speaker|length == 1 %}
          {% set class = 'col-sm-12' %}
        {% endif %}
        {% if node.field_event_speaker|length == 2 %}
          {% set class = 'col-sm-6' %}
        {% endif %}

        {% if node.field_event_speaker %}
          <div class="event-speakers">
            {% for key,speaker in node.field_event_speaker %}
              <div class="{{ class }} pd0">
                <div class="row box-shadow">
                  <div class="col-sm-4 text-center founder-info">
                    {%if speaker.entity.user_picture.entity.uri.value != "" %}
                      <img src="{{ file_url(speaker.entity.user_picture.entity.uri.value) }}">
                    {%endif%}
                  </div>
                  <div class="col-sm-8 founder-txt fs14">
                    <h4>{{ speaker.entity.field_full_name.value }}</h4>
                    <p>{{ speaker.entity.field_designation.value }}</p>
                  </div>
                  <div class="col-sm-12">
                    <div class="speaker-intro border-bottom clr-white fs14">
                      {{ speaker.entity.field_bio.value|render|striptags }}
                    </div>
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
        {% endif %}
        <!-- Speakers ends -->

        <!-- VenueStarts -->
        <div class="col-md-6 text-center border-bottom location-outer">
          <div class="col-sm-6 pd0">
            <span class="icon event-date">img</span>
            <p class="fw600 time">
              {{ content.field_event_date|render|striptags }}
              <br />
              {{ content.field_event_time|render|striptags }}
            </p>
          </div>
          <div class="col-sm-6 pd0">
            <span class="icon location-icon">img</span>
            <p class="fw600 time">
              {{ content.field_venue_name|render|striptags }}
              <br />
              {{ content.field_event_venue_address|render|striptags }}
            </p>
          </div>
          <!-- logos  -->
          <p class="mtb10 event-open">
            This event is open for all genders & free of cost but by invitation only. Prior registration and confirmation is required .
          </p>
        </div>
        <!-- Venue ends -->

        <!-- Event sponsors Starts -->
        <div class="col-sm-6 pd0 event-logos text-right">
          {% if node.field_event_sponsors %}
            {% for sponser in node.field_event_sponsors %}
              <img src="{{ file_url(sponser.entity.field_logo.entity.uri.value) }}" class="img-responsive logos" />
            {% endfor %}
          {% endif %}
        </div>
        <!-- Event sponsors ends -->
      </div>
      <!-- Speakers, venue and event sponsors ends -->


    </div>
  </section>
</article>
